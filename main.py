from dnslib.server import DNSServer, BaseResolver, DNSLogger
from dnslib import RR, QTYPE, A, SOA, TXT
import random
import time
from datetime import datetime, UTC
import os
import sys

# üìÅ Ruta de logs (puede venir de variable de entorno)
# Opci√≥n 1: Usar directorio relativo al script
#LOG_DIR = os.path.join(os.path.dirname(os.path.abspath(__file__)), "logs")
# Opci√≥n 2: Si prefieres ruta absoluta, descomenta la l√≠nea siguiente:
LOG_DIR = "./logs"
LOG_FILE = os.path.join(LOG_DIR, "dns_honeypot.log")

# Crear directorio de logs con manejo de errores mejorado
try:
    os.makedirs(LOG_DIR, exist_ok=True)
    # Verificar que podemos escribir en el directorio
    test_file = os.path.join(LOG_DIR, "test_write.tmp")
    with open(test_file, "w") as f:
        f.write("test")
    os.remove(test_file)
    print(f"[+] Directorio de logs creado/verificado: {LOG_DIR}")
except PermissionError:
    print(f"[!] Error: Sin permisos para escribir en {LOG_DIR}")
    print("[!] Intentando usar directorio local...")
    LOG_DIR = "./logs"
    LOG_FILE = os.path.join(LOG_DIR, "dns_honeypot.log")
    os.makedirs(LOG_DIR, exist_ok=True)
    print(f"[+] Usando directorio local: {LOG_DIR}")
except Exception as e:
    print(f"[!] Error al crear directorio de logs: {e}")
    sys.exit(1)

# Zona falsa para simular transferencia
FAKE_ZONE = {
    "admin.example.com.": "192.0.2.1",
    "mail.example.com.": "192.0.2.2",
    "vpn.example.com.": "192.0.2.3",
    "dev.example.com.": "192.0.2.4",
    "secret.example.com.": "192.0.2.5"
}

class TrollResolver(BaseResolver):
    def resolve(self, request, handler):
        qname = str(request.q.qname)
        qtype = QTYPE[request.q.qtype]
        ip = handler.client_address[0]

        # Log de consulta con mejor manejo de errores
        log_entry = f"{datetime.now(UTC).isoformat()} | {ip} | dns | {qtype} | {qname}\n"

        try:
            with open(LOG_FILE, "a", encoding='utf-8') as log:
                log.write(log_entry)
                log.flush()  # Forzar escritura inmediata
            print(f"[LOG] {log_entry.strip()}")  # Tambi√©n mostrar en consola
        except Exception as e:
            print(f"[!] Error al escribir log: {e}")
            print(f"[!] Entrada que se intent√≥ escribir: {log_entry.strip()}")
            # Intentar escribir en un archivo de backup
            try:
                backup_file = "./dns_honeypot_backup.log"
                with open(backup_file, "a", encoding='utf-8') as backup:
                    backup.write(log_entry)
                    backup.flush()
                print(f"[+] Log guardado en archivo de backup: {backup_file}")
            except:
                print("[!] No se pudo escribir ni en el archivo principal ni en el backup")

        reply = request.reply()

        if qtype == "AXFR":
            # Simula transferencia de zona (fake AXFR)
            print(f"[ALERT] Intento de transferencia de zona AXFR desde {ip}")
            for fqdn, fake_ip in FAKE_ZONE.items():
                reply.add_answer(RR(fqdn, QTYPE.A, rdata=A(fake_ip), ttl=300))
            reply.add_answer(RR(qname, QTYPE.SOA, ttl=300,
                rdata=SOA("ns.fakehost.com.", "admin.fakehost.com.",
                          (2025080101, 3600, 1800, 604800, 86400))))
            return reply

        if qtype == "A":
            fake_ip = f"{random.randint(100,255)}.{random.randint(1,254)}.{random.randint(1,254)}.{random.randint(1,254)}"
            reply.add_answer(RR(qname, QTYPE.A, rdata=A(fake_ip), ttl=60))

        elif qtype == "TXT":
            reply.add_answer(RR(qname, QTYPE.TXT, rdata=TXT("Access Denied"), ttl=60))

        return reply

def test_logging():
    """Funci√≥n para probar que el logging funciona"""
    test_entry = f"{datetime.now(UTC).isoformat()} | TEST | dns | A | test.example.com.\n"
    try:
        with open(LOG_FILE, "a", encoding='utf-8') as log:
            log.write(test_entry)
            log.flush()
        print(f"[+] Test de logging exitoso: {LOG_FILE}")
        return True
    except Exception as e:
        print(f"[!] Test de logging fall√≥: {e}")
        return False

banner = """
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£∂‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ø‚£∑‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£æ‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚£ø‚£ß‚°Ä‚†Ä‚†Ä‚£º‚†É‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚£ø‚†ª‚£∑‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£¥‚°∂‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢∏‚£ø‚£ß‚†Ä‚£∞‚°è‚†Ä‚£ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£Ä‚£†‚£§‚£à‚£ß‚†à‚†ª‚£ø‚£¶‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚£∏‚£ø‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚£¥‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†ò‚°è‚¢ø‚£ß‚£ø‚†Ä‚¢Ä‚£ø‚†Å‚†Ä‚¢Ä‚£æ‚°á‚†Ä‚†Ä‚†Ä‚£Ä‚†§‚†ñ‚†Ç‚†â‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚°è‚£Ä‚£Ä‚£≠‚£∑‚£Ñ‚†â‚†â‚†í‚¢ª‚£ø‚£ø‚£ø‚£ø‚°Ü‚¢Ä‚£æ‚£ø‚£ø‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚£§‚£á‚†ò‚£ø‚†á‚†Ä‚¢∏‚°á‚†Ä‚¢†‚£æ‚£ø‚£Ä‚°§‚†ö‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚¢ª‚£Ω‚£ø‚£ø‚£ø‚£ß‚°Ä‚†Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢∏‚£ø‚£ø‚°Ä‚¢ª‚°á‚¢†‚°ø‚†Ä‚£∞‚£ø‚°ø‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ä‚¢∏‚£ø‚£ø‚£ø‚£ø‚†è‚†ô‚¢ø‚£ø‚£ø‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£∂
‚¢∏‚£ø‚£ø‚£ß‚£à‚£ß‚°ø‚†Å‚¢†‚°ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†à‚£ø‚£ø‚£ø‚°è‚†Ä‚†Ä‚£º‚¢π‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚£ø
‚£ø‚°ü‚¢ø‚£ø‚£ø‚£ø‚†Å‚°¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚†≥‚°Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ü‚¢π‚£ø‚£ø‚†Å‚†Ä‚¢Ä‚¢õ‚£º‚£ø‚£ø‚†≥‚£Ñ‚¢Ä‚£æ‚£ø‚£ø
‚¢ª‚°á‚†Ä‚¢ª‚£ø‚£á‚°û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ß‚†ò‚¢¶‚£Ä‚°Ä‚†Ä‚†Ä‚†à‚†ª‚£ø‚£ø‚£ø‚£á‚†Ä‚£ø‚°ü‚†Ä‚†Ä‚°û‚£ø‚£ø‚£ø‚£ø‚†Ä‚†ò‚£ø‚°ó‚£ø‚£ø
‚†à‚£ß‚†Ä‚†à‚£ø‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢¶‚°Ä‚†à‚†ô‚°ì‚†∂‚£§‚£Ñ‚°à‚†ª‚£ø‚£ø‚£ß‚£∏‚°á‚°Ü‚†Ä‚¢≥‚£ø‚£ø‚£ø‚°á‚†Ä‚£∏‚£è‚†Å‚£ø‚£ø
‚†Ä‚†π‚°Ü‚†Ä‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚¢¶‚°Ä‚†â‚†≥‚¢¶‚°à‚†õ‚†∑‚£ø‚£ø‚£ø‚£ø‚£Ö‚†Å‚†Ä‚£ø‚£ø‚£ø‚°ü‚†Ä‚¢∞‚£ø‚†É‚†Ä‚£º‚£ø
‚†Ä‚†Ä‚¢ª‚£Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†≤‚£Ñ‚£Ñ‚£å‚£≤‚£Ñ‚†∏‚£ø‚°ø‚£ø‚£ø‚£∑‚£¥‚£ø‚£ø‚†ü‚†Ä‚†Ä‚£ø‚°ø‚†Ä‚†Ä‚£∏‚°ü
‚†Ä‚†Ä‚†ò‚£ø‚°è‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚£ø‚£ø‚¢ø‚£∂‚£∂‚£¶‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚¢ø‚£ø‚£ø‚£∑‚£ø‚£ß‚†à‚†ª‚¢ø‚£ø‚£ø‚†ã‚†Ä‚†Ä‚¢∏‚£ø‚†á‚†Ä‚£º‚°ø‚£á
‚†Ä‚£Ä‚°¥‚¢ã‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚°∑‚†ø‚£ø‚£ø‚£ø‚¢£‚£æ‚£ø‚£ø‚£ø‚£ø‚£∑‚£≠‚£ô‚†∂‚°Ñ‚†Ä‚†Ä‚¢∞‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†ª‚£ø‚£ø‚£ø‚£ß‚†Ä‚†ò‚†õ‚£ø‚£Ü‚†Ä‚†Ä‚£ø‚°á‚†Ä‚¢Ä‚£ø‚†á‚¢∏
‚†Ä‚¢ª‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†à‚¢Å‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°π‚°Ñ‚†Ä‚†Ä‚†≥‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ø‚£ø‚£á‚†Ä‚†Ä‚†à‚¢ª‚°Ü‚¢∏‚†É‚†Ä‚†Ä‚£æ‚†è‚†Ä‚¢∏
‚†Ä‚†à‚°á‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚°π‚°Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚£æ‚°Ñ‚†Ä‚†Ä‚¢ø‚°ü‚†Ä‚£†‚£º‚£ø‚†á‚†Ä‚¢º
‚†Ä‚†∏‚£Ö‚¢∑‚£ø‚£ø‚£ø‚£ø‚£ø‚£ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á‚°á‚†Ä‚†Ä‚¢ß‚°Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£¶‚¢†‚£ø‚£ø‚£ø‚°ø‚£ø‚£ø‚†Ä‚†Ä‚°ü
‚†Ä‚£Ä‚°ø‚†à‚¢ø‚£ø‚£ø‚°á‚¢ª‚£ø‚°ó‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†É‚£∏‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£¥‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ã‚£¥‚£ø‚£ø‚†Ä‚¢Ä‚°ü
‚†Ä‚°ø‚†Å‚†Ä‚†º‚†õ‚¢π‚£Ø‚£∏‚£ø‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ª‚¢ø‚£ø‚£ø‚£ø‚°ø‚†õ‚†Å‚°∞‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†û‚†â‚¢ø‚°ø‚†ø‚†ü‚£ª‚°ü‚†Å‚¢†‚°æ‚†õ‚¢©‚£ø‚£∞‚°ø‚†Ä
‚†∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†á‚†ø‚†ã‚£ø‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ú‚†Å‚†Ä‚†Ä‚£†‚°¥‚¢ª‚£ø‚£ø‚£∂‚£∂‚£∂‚£æ‚°ø‚†Ä‚°ñ‚¢∏‚°á‚†Ä‚¢†‚°ü‚£†‚°æ‚£ã‚£¥‚£¥‚†ü‚£Ω‚£ø‚†É‚†Ä
‚†Ä‚¢∑‚†Ä‚¢Ä‚°æ‚£§‚£º‚£∂‚°ñ‚†∂‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢≤‚£∑‚£∂‚°∂‚†∂‚†Ü‚£Ä‚£Ä‚£†‚£¥‚†ü‚°ü‚†Ä‚†Ä‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚†Å‚¢®‚†É‚£∏‚£ø‚£¶‚£ø‚£ü‚£©‚£æ‚°ø‚†ã‚£°‚£æ‚£ø‚†É‚†Ä‚†Ä
‚†Ä‚†Ä‚†â‚†â‚†Ä‚¢∞‚†è‚†à‚†ª‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ª‚£è‚£¥‚£æ‚£ø‚°ü‚†Å‚†Ä‚†Ä‚£∏‚°á‚†Ä‚†Ä‚†Ä‚¢ø‚†ª‚†ø‚¢´‚†è‚†Ä‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†Å‚£∂‚£¥‚£ø‚£ø‚†á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°ø‚£ø‚†è‚£ø‚°á‚†Ä‚¢Ä‚£æ‚£ø‚†ß‚†Ä‚†Ä‚†Ä‚¢∏‚°Ñ‚£∞‚†ü‚†Ä‚†Ä‚†Ä‚¢†‚£ø‚£ø‚£ø‚£Ø‚£Å‚£†‚£æ‚£ø‚£ø‚†ü‚†ã‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ò‚†ã‚¢∞‚£ø‚£ø‚£∂‚°æ‚£ø‚£ø‚†á‚†Ä‚£†‚†û‚¢â‚†ú‚†Å‚°¥‚†Ä‚¢Ä‚£¥‚°ü‚†â‚†Ä‚†â‚†õ‚†ø‚†ø‚†ü‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£π‚£∂‚°¶‚£¥‚¢≤‚£¥‚¢¶‚°§‚£§‚£§‚£Ñ‚£§‚£§‚£§‚£§‚£§‚£¥‚°ø‚†ã‚†ô‚¢ø‚£Ø‚£ø‚£ø‚†Ä‚°∞‚†É‚†Ä‚†ã‚†Ä‚°º‚†Å‚†Ä‚°û‚£∏‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚£ø‚¢∞‚°á‚¢∞‚†á‚¢∏‚°á‚£∏‚£®‚£á‚£∏‚£è‚£∏‚¢á‚£æ‚£ø‚£Ä‚£†‚†§‚†§‚†µ‚£´‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°º‚†Ä‚¢π‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£ü‚¢ø‚¢ø‚£ø‚£∑‚£ø‚£π‚£á‚£ø‚£∏‚£ß‚†•‚†ø‚†¥‚†ú‚†ã‚†Å‚†Ä‚†Ä‚°¥‚†û‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°¥‚†Å‚¢Ä‚£º‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†õ‚†â‚†â‚†ô‚†â‚†Å‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢Ä‚£†‚£æ‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£†‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£§‚£§‚£¥‚£∂‚†æ‚†õ‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚£∂‚£æ‚†ø‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚¢Ä‚£†‚£æ‚°æ‚†ü‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚¢Ä‚£Ä‚°Ä‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚£¥‚£∂‚†∂‚†ø‚†õ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢∑‚£Ç‚£Ä‚£Ä‚£Ä‚£ç‚£≥‚£∂‚£æ‚£ø‚†ø‚†ü‚†õ‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚†ª‚†ø‚†ø‚†õ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
"""

if __name__ == "__main__":
    os.system("clear")
    time.sleep(1)
    # Imprimir banner
    print("")
    print(banner)
    print("[+] Iniciando DNS Honeypot...")
    print(f"[+] Archivo de log: {LOG_FILE}")

    # Probar logging antes de iniciar el servidor
    if not test_logging():
        print("[!] No se puede escribir en el archivo de logs. Abortando...")
        sys.exit(1)

    resolver = TrollResolver()
    logger = DNSLogger(prefix=False)

    try:
        udp_server = DNSServer(resolver, port=53, address="0.0.0.0", logger=logger)
        tcp_server = DNSServer(resolver, port=53, address="0.0.0.0", logger=logger, tcp=True)

        print("[+] DNS honeypot with AXFR running on UDP/TCP port 53")
        print(f"[+] Logs se guardar√°n en: {LOG_FILE}")

        udp_server.start_thread()
        tcp_server.start_thread()

        print("[+] Servidores iniciados. Presiona Ctrl+C para detener...")

        while True:
            time.sleep(1)

    except PermissionError:
        print("[!] Error: Sin permisos para bind al puerto 53")
        print("[!] Ejecuta como root o usa un puerto > 1024")
        sys.exit(1)
    except KeyboardInterrupt:
        print("\n[!] Stopping DNS honeypot...")
    except Exception as e:
        print(f"[!] Error inesperado: {e}")
        sys.exit(1)
